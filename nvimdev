#!/bin/bash

# Set the default values
WORKSPACEDIR=$(pwd)
NEOVIMDIR="/home/$USER/.config/nvim/"
ID="1"

# Function to start and attach to an existing container
start_and_attach_container() {
    local id="$1"
    local eng="$2"

    $eng start "${id}_nvim_dev"
    $eng attach "${id}_nvim_dev"
}

# Function to run a container
run_container() {
    local id="$1"
    local eng="$2"
    local workspacedir="$3"
    local neovimdir="$4"

    # Check if a container with the same ID already exists
    container_exists=$($eng ps -a --filter "name=${id}_nvim_dev" --format "{{.Names}}")

    if [ -n "$container_exists" ]; then
        echo "Starting existing ${id}_nvim_dev container"
        start_and_attach_container "$id" "$eng"
    else
        echo "Creating new ${id}_nvim_dev container"

        if [ -z "$workspacedir" ] || [ -z "$neovimdir" ]; then
            echo "Both --workspacedir and --neovimdir are required when creating a new container"
            exit 1
        fi

        $eng run --name "${id}_nvim_dev" --userns=keep-id --network host -v "$workspacedir":/workspace:Z,U -v "$neovimdir":/neovim:ro -it nvim_dev
    fi
}

# Function to list all containers created by this script
list_containers() {
	local eng="$1"
	$eng ps -a | grep "nvim_dev"
}

# Parse the command line arguments
COMMAND="$1"
shift

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
	--workspacedir)
		WORKSPACEDIR="$2"
		shift
		shift
		;;
	--neovimdir)
		NEOVIMDIR="$2"
		shift
		shift
		;;
	--id)
		ID="$2"
		shift
		shift
		;;
	*)
		echo "Unknown option: $key"
		exit 1
		;;
	esac
done

# Automatically detect podman or docker
if command -v podman >/dev/null 2>&1; then
	eng=podman
elif command -v docker >/dev/null 2>&1; then
	eng=docker
else
	echo "Neither Podman nor Docker was found on your system."
	exit 1
fi

echo "Using $eng"

# Execute the command
case $COMMAND in
run)
	run_container "$ID" "$eng" "$WORKSPACEDIR" "$NEOVIMDIR"
	;;
list)
	list_containers "$eng"
	;;
*)
	echo "Unknown command: $COMMAND"
	echo "Available commands: run, list"
	exit 1
	;;
esac
